/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Principal.java
 *
 * Created on 27-may-2011, 20:02:23
 */

package visual;

import clases.EListaVacia;
import clases.EPosFueraRango;
import clases.cElipseGrafico;
import clases.Figura;
import clases.cLienzo;
import clases.cRectanguloGrafico;
import clases.cTrianguloGrafico;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis Enrique
 */
public class Principal extends javax.swing.JFrame {

    /** Creates new form Principal */
    private cLienzo lienzo;
    private DefaultListModel listFigurasModel;
    private int pos;

    public Principal() {
        lienzo= new cLienzo();
        initComponents();
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        listFigurasModel= new DefaultListModel();
        ListFiguras.setModel(listFigurasModel);
        //setModel es para agregarle a la lista un modelo
        //un modelo es donde se agregan los elementos
        setTitle("Figuras Geométricas");
        MouseMotionListener ms=new MouseAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                super.mouseDragged(e);
                int xx=e.getX();
                int yy=e.getY();
                try {
                    Figura fig = (Figura) lienzo.getObjeto(pos);
                    fig.Trasladar(xx, yy);
                    Dibujar();
                }
                catch (EPosFueraRango ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
        };
        panel.addMouseMotionListener(ms);
        setResizable(false);
    }

    public void Dibujar(){
        pos = ListFiguras.getSelectedIndex();
        if (pos != -1)
        {
            Figura fig;
            try {
                fig = ((Figura) lienzo.getObjeto(pos));
                if(fig instanceof cElipseGrafico){
                    labelTipo.setText("Elipse");
                    panelColor.setBackground(((cElipseGrafico)fig).getLineColor());
                    panelColor1.setBackground(((cElipseGrafico)fig).getBordeColor());
                }
                else if (fig instanceof cRectanguloGrafico){
                    labelTipo.setText("Rectángulo");
                    panelColor.setBackground(((cRectanguloGrafico)fig).getLineColor());
                    panelColor1.setBackground(((cRectanguloGrafico)fig).getBordeColor());
                }
                else if (fig instanceof cTrianguloGrafico){
                    labelTipo.setText("Triángulo");
                    panelColor.setBackground(((cTrianguloGrafico)fig).getLineColor());
                    panelColor1.setBackground(((cTrianguloGrafico)fig).getBordeColor());
                }
                labelArea.setText(Double.toString(fig.area()));
                labelPerimetro.setText(Double.toString(fig.perimetro()));
                lienzo.clear(panel.getGraphics());
                lienzo.getObjeto(pos).dibujar(panel.getGraphics());
            }
            catch (EPosFueraRango ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }

     public void actualizarJList(){
        int cantFiguras = lienzo.getCantObjetos();
        listFigurasModel.clear();
        for(int i = 0; i < cantFiguras; i++)
            listFigurasModel.addElement("Figura "+(i+1));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelTipo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        panelColor = new javax.swing.JPanel();
        labelArea = new javax.swing.JLabel();
        labelPerimetro = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        panelColor1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListFiguras = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        panel = new javax.swing.JList();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        GuardarFichero = new javax.swing.JMenuItem();
        AbrirFichero = new javax.swing.JMenuItem();
        Salir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        EliminarFig = new javax.swing.JMenuItem();
        RotarFigura = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Propiedades"));

        jLabel1.setText("Tipo:");

        jLabel2.setText("Área:");

        jLabel3.setText("Perímetro:");

        jLabel4.setText("Color Fondo:");

        panelColor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panelColorLayout = new javax.swing.GroupLayout(panelColor);
        panelColor.setLayout(panelColorLayout);
        panelColorLayout.setHorizontalGroup(
            panelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 90, Short.MAX_VALUE)
        );
        panelColorLayout.setVerticalGroup(
            panelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jLabel5.setText("Color Borde:");

        panelColor1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panelColor1Layout = new javax.swing.GroupLayout(panelColor1);
        panelColor1.setLayout(panelColor1Layout);
        panelColor1Layout.setHorizontalGroup(
            panelColor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 90, Short.MAX_VALUE)
        );
        panelColor1Layout.setVerticalGroup(
            panelColor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(panelColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(panelColor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelPerimetro, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)))
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(30, 30, 30)
                        .addComponent(labelArea, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(28, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(labelArea, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(labelPerimetro, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(panelColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(panelColor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        ListFiguras.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListFigurasValueChanged(evt);
            }
        });
        ListFiguras.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                ListFigurasAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(ListFiguras);

        jScrollPane2.setViewportView(panel);

        jMenu1.setText("Inicio");

        jMenu3.setText("Crear una nueva figura");

        jMenuItem9.setText("Elipse");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuItem10.setText("Rectángulo");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuItem11.setText("Triángulo");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem11);

        jMenu1.add(jMenu3);

        jMenuItem1.setText("Nuevo Dibujo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        GuardarFichero.setText("Guardar proyecto");
        GuardarFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarFicheroActionPerformed(evt);
            }
        });
        jMenu1.add(GuardarFichero);

        AbrirFichero.setText("Abrir proyecto");
        AbrirFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirFicheroActionPerformed(evt);
            }
        });
        jMenu1.add(AbrirFichero);

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        jMenu1.add(Salir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edición");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenu4.setText("Cambiar color");

        jMenuItem2.setText("Color de borde ");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jMenuItem3.setText("Color de relleno ");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenu2.add(jMenu4);

        EliminarFig.setText("Eliminar figura");
        EliminarFig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarFigActionPerformed(evt);
            }
        });
        jMenu2.add(EliminarFig);

        RotarFigura.setText("Girar Figura");
        RotarFigura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotarFiguraActionPerformed(evt);
            }
        });
        jMenu2.add(RotarFigura);

        jMenuItem8.setText("Modificar Valores");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuItem4.setText("Trasladar figura");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-716)/2, (screenSize.height-501)/2, 716, 501);
    }// </editor-fold>//GEN-END:initComponents

    private void ListFigurasAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_ListFigurasAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_ListFigurasAncestorAdded

    private void ListFigurasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListFigurasValueChanged
          Dibujar();
    }//GEN-LAST:event_ListFigurasValueChanged

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        dispose();
    }//GEN-LAST:event_SalirActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            lienzo.eliminarTodos();
            actualizarJList();
            repaint();//repinta todo de nuevo, ejecuta el metodo paint
            //volver a pintar lo que tiene el graphics
            labelTipo.setText(null);
            labelArea.setText(null);
            labelPerimetro.setText(null);
            panelColor.setBackground(Color.WHITE);
            panelColor1.setBackground(Color.WHITE);
            panel.setBackground(Color.WHITE);
        } catch (EPosFueraRango ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (EListaVacia ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        return;
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        AddElipse dialog= new AddElipse(this, true, lienzo);
        dialog.setTitle("Adicionar una nueva elipse");
        dialog.setVisible(true);
        actualizarJList();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        AddRectangulo dialog= new AddRectangulo(this, true, lienzo);
        dialog.setTitle("Adicionar un nuevo rectángulo");
        dialog.setVisible(true);
        actualizarJList();
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        AddTriangulo dialog= new AddTriangulo(this, true, lienzo);
        dialog.setTitle("Adicionar un nuevo triángulo");
        dialog.setVisible(true);
        actualizarJList();
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem8ActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed1
       
    }//GEN-LAST:event_jMenuItem8ActionPerformed1

    private void GuardarFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarFicheroActionPerformed
        JFileChooser chooser = new JFileChooser();//se construye la ventana
        int modalResult = chooser.showSaveDialog(this);//mostrar el dialog salvar
        String nombreFichero = "";
        if (modalResult == JFileChooser.APPROVE_OPTION){
            try {
                nombreFichero = chooser.getSelectedFile().getAbsolutePath();
                File f= new File(nombreFichero);//fichero
                FileOutputStream fos = new FileOutputStream(f);//flujo de salida
                ObjectOutputStream oos = new ObjectOutputStream(fos);//escribe en el flujo
                oos.writeObject(lienzo);
                oos.close();
                actualizarJList();
                repaint();
            }
            catch (IOException ex) {
                JOptionPane.showConfirmDialog(rootPane, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_GuardarFicheroActionPerformed

    private void AbrirFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirFicheroActionPerformed
        JFileChooser chooser = new JFileChooser();
        int modalResult = chooser.showOpenDialog(this);
        if (modalResult == JFileChooser.APPROVE_OPTION){
            String nombreFichero = "";
            try {
                nombreFichero = chooser.getSelectedFile().getAbsolutePath();
                FileInputStream fis = new FileInputStream(nombreFichero);
                ObjectInputStream ois = new ObjectInputStream(fis);
                lienzo = (cLienzo) ois.readObject();
                ois.close();
                actualizarJList();
                repaint();
                this.setTitle("Figuras Geométricas - "+nombreFichero);
            }
            catch (FileNotFoundException ex) {//no se encuentra el archivo
                JOptionPane.showMessageDialog(rootPane, "Fichero "+nombreFichero+" no encontrado", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            catch (IOException ex) {//problema de entrada o salida
                JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            catch (ClassNotFoundException ex) {//no se encontro la clase
                JOptionPane.showMessageDialog(rootPane, "No se pudo hacer el casting a Lienzo", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_AbrirFicheroActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        pos = ListFiguras.getSelectedIndex();
        if (pos!= -1){
            if(labelTipo.getText().equals("Elipse")){
                ModifValElip dialog= new ModifValElip(this, true, lienzo, pos);
                dialog.setTitle("Modificar los radios de la elipse");
                dialog.setVisible(true);
                actualizarJList();
                repaint();
            }
            else if(labelTipo.getText().equals("Rectángulo")){
                ModifValRectan dialog= new ModifValRectan(this, true, lienzo, pos);
                dialog.setTitle("Modificar los lados del rectángulo");
                dialog.setVisible(true);
                actualizarJList();
                repaint();
            } 
            else if(labelTipo.getText().equals("Triángulo"))
                JOptionPane.showMessageDialog(this, "El proyecto no pidio modificar valores en el triángulo", "Lo sentimos", JOptionPane.QUESTION_MESSAGE);
        } else
            JOptionPane.showMessageDialog(this, "No has seleccionado ningún elemento", "Error!!", JOptionPane.QUESTION_MESSAGE);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void RotarFiguraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotarFiguraActionPerformed
        pos= ListFiguras.getSelectedIndex();
        if (pos!= -1){
            try {
                lienzo.Rotar(pos);
                lienzo.clear(panel.getGraphics());
                lienzo.getObjeto(pos).dibujar(panel.getGraphics());
            } catch (EPosFueraRango ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else
            JOptionPane.showMessageDialog(this, "No has seleccionado ningún elemento", "Error!!", JOptionPane.QUESTION_MESSAGE);
        return;
}//GEN-LAST:event_RotarFiguraActionPerformed

    private void EliminarFigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarFigActionPerformed
        pos = ListFiguras.getSelectedIndex();
        if (pos!= -1){
            try {
                lienzo.eliminar(pos);
                actualizarJList();
                repaint();//repinta todo de nuevo, ejecuta el metodo paint
                //volver a pintar lo que tiene el graphics
                labelTipo.setText(null);
                labelArea.setText(null);
                labelPerimetro.setText(null);
                panelColor.setBackground(Color.WHITE);
                panelColor1.setBackground(Color.WHITE);
                panel.setBackground(Color.WHITE);
            } catch (EPosFueraRango ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            } catch (EListaVacia ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        } else
            JOptionPane.showMessageDialog(this, "No has seleccionado ningún elemento", "Error!!", JOptionPane.QUESTION_MESSAGE);
        return;
}//GEN-LAST:event_EliminarFigActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        pos = ListFiguras.getSelectedIndex();
        if (pos!= -1){
            if(labelTipo.getText().equals("Elipse")){
                CambiarColorDBorde dialog= new CambiarColorDBorde(this, true, lienzo, pos);
                dialog.setTitle("Cambiar Color de Borde");
                dialog.setVisible(true);
                actualizarJList();
                repaint();
            }
            else if(labelTipo.getText().equals("Rectángulo")){
                CambiarColorDBorde dialog= new CambiarColorDBorde(this, true, lienzo, pos);
                dialog.setTitle("Cambiar Color de Borde");
                dialog.setVisible(true);
                actualizarJList();
                repaint();
            }
            else if(labelTipo.getText().equals("Triángulo")){
                CambiarColorDBorde dialog= new CambiarColorDBorde(this, true, lienzo, pos);
                dialog.setTitle("Cambiar Color de Borde");
                dialog.setVisible(true);
                actualizarJList();
                repaint();
            }
        } else
            JOptionPane.showMessageDialog(this, "No has seleccionado ningún elemento", "Error!!", JOptionPane.QUESTION_MESSAGE);
    
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        pos = ListFiguras.getSelectedIndex();
        if (pos!= -1){
            if(labelTipo.getText().equals("Elipse")){
                CambiarColorDRelleno dialog= new CambiarColorDRelleno(this, true, lienzo, pos);
                dialog.setTitle("Cambiar Color de Fondo");
                dialog.setVisible(true);
                actualizarJList();
                repaint();
            }
            else if(labelTipo.getText().equals("Rectángulo")){
                CambiarColorDRelleno dialog= new CambiarColorDRelleno(this, true, lienzo, pos);
                dialog.setTitle("Cambiar Color de Fondo");
                dialog.setVisible(true);
                actualizarJList();
                repaint();
            }
            else if(labelTipo.getText().equals("Triángulo")){
                CambiarColorDRelleno dialog= new CambiarColorDRelleno(this, true, lienzo, pos);
                dialog.setTitle("Cambiar Color de Fondo");
                dialog.setVisible(true);
                actualizarJList();
                repaint();
            }
        } else
            JOptionPane.showMessageDialog(this, "No has seleccionado ningún elemento", "Error!!", JOptionPane.QUESTION_MESSAGE);

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        pos = ListFiguras.getSelectedIndex();
        if (pos!= -1){
            TrasladarFig dialog = new TrasladarFig(this, true, lienzo, pos);
            dialog.setTitle("Traslada figura");
            dialog.setVisible(true);
            actualizarJList();
            repaint();
        }
        else
            JOptionPane.showMessageDialog(this, "No has seleccionado ningún elemento", "Error!!", JOptionPane.QUESTION_MESSAGE);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AbrirFichero;
    private javax.swing.JMenuItem EliminarFig;
    private javax.swing.JMenuItem GuardarFichero;
    private javax.swing.JList ListFiguras;
    private javax.swing.JMenuItem RotarFigura;
    private javax.swing.JMenuItem Salir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelArea;
    private javax.swing.JLabel labelPerimetro;
    private javax.swing.JLabel labelTipo;
    private javax.swing.JList panel;
    private javax.swing.JPanel panelColor;
    private javax.swing.JPanel panelColor1;
    // End of variables declaration//GEN-END:variables

}
